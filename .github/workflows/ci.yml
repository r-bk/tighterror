name: CI

on:
  push:
    branches:
      - 'main'
      - '**_ci'
  pull_request:
  schedule:
    - cron: '0 1 * * 5'

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: --deny warnings

jobs:
  ci:
    runs-on: ${{ matrix.runs_on }}
    strategy:
      matrix:
        rust:
          - stable
          - beta
          - 1.76.0  # MSRV
        runs_on:
          - ubuntu-latest
          - macos-latest
          - windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          components: rustfmt, clippy
      - name: build
        run: cargo build --workspace
      - name: test
        run: cargo test --workspace
      - name: clippy
        run: cargo clippy --workspace --all-features --all-targets
      - name: build yaml
        run: cargo build -p tighterror-build --no-default-features --features yaml
      - name: build toml
        run: cargo build -p tighterror-build --no-default-features --features toml
      - name: build all-features
        run: cargo build -p tighterror-build --all-features
      - name: test yaml
        run: cargo test -p tighterror-build --no-default-features --features yaml
      - name: test toml
        run: cargo test -p tighterror-build --no-default-features --features toml
      - name: test all-features
        run: cargo test -p tighterror-build --all-features
      - name: clippy yaml
        run: cargo clippy -p tighterror-build --no-default-features --features yaml --all-targets
      - name: clippy toml
        run: cargo clippy -p tighterror-build --no-default-features --features toml --all-targets
      - name: clippy all-features
        run: cargo clippy -p tighterror-build --all-features --all-targets
      - name: extra-tests build
        run: cargo build --workspace --all-features --all-targets
        working-directory: crates/tighterror-build/tests/extra
      - name: extra-tests test
        run: cargo test --workspace --all-features --all-targets
        working-directory: crates/tighterror-build/tests/extra
      - name: extra-tests clippy
        run: cargo clippy --workspace --all-features --all-targets
        working-directory: crates/tighterror-build/tests/extra

  no-rustfmt:
    runs-on: ubuntu-latest
    env:
      RUST_LOG: info
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable
      - name: remove rustfmt
        run: |
          if which rustfmt; then
            rm $(which rustfmt)
            echo "remove-rustfmt: REMOVED"
          fi
          if which rustfmt; then
            echo "remove-rustfmt: VERIFY ERR"
            exit 1
          else
            echo "remove-rustfmt: VERIFY OK"
          fi
        shell: bash
      - name: build without rustfmt
        run: cargo build -vv --workspace --all-features --all-targets
      - name: test without rustfmt
        run: cargo test --workspace --all-features --all-targets
      - name: check without rustfmt
        run: cargo check --workspace --all-features --all-targets
      - name: extra-tests build without rustfmt
        run: cargo build -vv --workspace --all-features --all-targets
        working-directory: crates/tighterror-build/tests/extra
      - name: extra-tests test without rustfmt
        run: cargo test --workspace --all-features --all-targets
        working-directory: crates/tighterror-build/tests/extra
      - name: extra-tests check without rustfmt
        run: cargo check --workspace --all-features --all-targets

  common-ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: nightly
          components: rustfmt
      - name: format all
        run: cargo fmt -- --check
      - name: extra-tests fmt
        run: cargo fmt --check
        working-directory: crates/tighterror-build/tests/extra
      - name: doc
        env:
          RUSTDOCFLAGS: "--cfg docsrs"
        run: cargo doc --all-features --no-deps

  compilation-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: beta
          components: rust-src, rustc-dev, llvm-tools-preview, clippy, rustfmt
      - name: test
        run: cargo test
        working-directory: crates/tighterror-build/tests/compilation
      - name: clippy
        run: cargo clippy --all-features --all-targets
        working-directory: crates/tighterror-build/tests/compilation
      - name: fmt
        run: cargo fmt --check
        working-directory: crates/tighterror-build/tests/compilation
      - name: fmt-inner
        run: cargo fmt -- --check tests/compile-fail/*.rs
        working-directory: crates/tighterror-build/tests/compilation
